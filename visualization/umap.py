# -*- coding: utf-8 -*-
"""umap.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rgcO-LWCm-32ulT8BtpAt1fQDMxlhMFw
"""

import umap
import numpy as np
import matplotlib.pyplot as plt

def plot_embeddings_with_labels(embeddings, labels):
    """
    Visualize embeddings using UMAP with colors corresponding to labels.

    Parameters:
    - embeddings: Numpy array of shape (num_embeddings, embedding_dim)
    - labels: List or array of labels corresponding to each embedding

    Returns:
    - None (plots the visualization)
    """
    # Reduce embeddings dimensionality
    reducer = umap.UMAP()
    low_dim_embeddings = reducer.fit_transform(embeddings)

    # Create a color map to map each label to a unique color
    unique_labels = np.unique(labels)
    colors = plt.cm.jet(np.linspace(0, 1, len(unique_labels)))
    label_to_color = dict(zip(unique_labels, colors))

    # Map the labels of your data to the corresponding colors
    point_colors = [label_to_color[label] for label in labels]

    # Plot the low-dimensional embeddings in 2D with colors
    plt.scatter(low_dim_embeddings[:, 0], low_dim_embeddings[:, 1], c=point_colors, s=5)
    plt.show()

# Example usage:
# plot_embeddings_with_labels(all_embeddings_np, your_labels)